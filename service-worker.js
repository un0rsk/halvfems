"use strict";var precacheConfig=[["/index.html","4cf6f993c611db5394b86a9f37ddc5b4"],["/static/css/main.1e661db9.css","e15b80e13dbd69022e8154a6929abe52"],["/static/js/main.55823e8d.js","908264e4fd21c62584769734f946d6e5"],["/static/media/DSC01456.b1772c01.jpg","b1772c01d547c9bac5a4af797a31727c"],["/static/media/DSC01477.be8c6671.jpg","be8c66713381ddf4505a74ac7b7c2d74"],["/static/media/DSC01683.4dec7429.jpg","4dec7429e2faa1594cb1e2f8bc6b4ac8"],["/static/media/DSC01832.7240f439.jpg","7240f439edba899acb57b08f6ab66eff"],["/static/media/DSC01869.fe8cbd38.jpg","fe8cbd383feb3a92682f04257dc15e9e"],["/static/media/DSC05603.90753c32.jpg","90753c324b7d2c5d5a4bdf4841245a79"],["/static/media/DSC05609.0f3b629e.jpg","0f3b629e82e1e084f34102173522885b"],["/static/media/DSC05629.3546bbde.jpg","3546bbdedbfe887528936094b766ff7d"],["/static/media/DSC05638.2efcb0e8.jpg","2efcb0e8f57a0bf36a0ddbf1a1a4dd91"],["/static/media/DSC05678.0f9caef4.jpg","0f9caef4c84b6feda5939c503cb0c035"],["/static/media/DSC05726.f1041c31.jpg","f1041c312b8be90cbc12747e785dcd9c"],["/static/media/DSC05832.4532f114.jpg","4532f114610fc20a283506dd15ea566a"],["/static/media/DSC05838.80e51fa4.jpg","80e51fa4b52cf7f67af360bba26b3196"],["/static/media/DSC05850.b9c09216.jpg","b9c09216ebc7802330136e7380b38d83"],["/static/media/DSC05886.833ec7a3.jpg","833ec7a31cd60c21043a8aeafef56afb"],["/static/media/DSC05934.b40a6bb8.jpg","b40a6bb8465599c7039ddd6ddd63ab00"],["/static/media/twitter.3d74e8bf.png","3d74e8bfd4ef7985f7529bb9f7650eca"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});